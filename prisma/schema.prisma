generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Colour {
  LIGHT_GREY
  GREY
  RED
  ORANGE
  AMBER
  YELLOW
  LIME
  GREEN
  EMERALD
  TEAL
  CYAN
  SKY
  BLUE
  INDIGO
  VIOLET
  PURPLE
  FUCHSIA
  PINK
  ROSE
}

model User {
  id       String  @id
  priority Boolean

  warnings Warning[]

  penaltyOverride   Penalty? @relation(fields: [penaltyOverrideId], references: [id])
  penaltyOverrideId Int?
}

model Warning {
  id Int @id @default(autoincrement())

  createdAt   DateTime
  createdBy   String
  description String?
  images      String[]
  silent      Boolean

  penalty   Penalty @relation(fields: [penaltyId], references: [id])
  penaltyId Int

  reasons Reason[]

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Reason {
  id Int @id @default(autoincrement())

  colour Colour
  name   String @unique

  warnings Warning[]
}

model Penalty {
  id Int @id @default(autoincrement())

  colour Colour
  name   String @unique

  ban     Boolean
  kick    Boolean
  timeout Int?

  warnings Warning[]
  users    User[]
}

model Message {
  id        String @id
  userId    String
  channelId String

  deleted Boolean

  revisions   MessageRevision[]
  attachments MessageAttachment[]
}

model MessageRevision {
  id Int @id @default(autoincrement())

  message   Message @relation(fields: [messageId], references: [id])
  messageId String

  timestamp DateTime
  content   String?
}

model MessageAttachment {
  id String @id

  message   Message @relation(fields: [messageId], references: [id])
  messageId String

  key      String
  mimeType String?
}
